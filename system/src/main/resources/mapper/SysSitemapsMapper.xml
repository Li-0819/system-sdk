<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.iris.mapper.ISysSitemapsMapper">

    <resultMap id="getAuthList" type="com.iris.model.vo.system.SitemapsAuthVO">
        <result column="id" jdbcType="VARCHAR" property="id" />
        <result column="parent_id" jdbcType="VARCHAR" property="parentId" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="level" jdbcType="INTEGER" property="level" />
        <result column="component" jdbcType="VARCHAR" property="component" />
        <result column="is_platform" jdbcType="INTEGER" property="isPlatform" />
        <result column="sequence" jdbcType="INTEGER" property="sequence" />
        <association property="meta" javaType="com.iris.model.vo.system.SitemapsMetaVO">
            <result property="icon" column="icon"/>
            <result property="title" column="title"/>
            <result property="show" column="show"/>
        </association>
    </resultMap>

    <resultMap id="SitemapsBaseInfo" type="com.iris.model.vo.system.SitemapsBaseVO">
        <id property="id" column="id" />
        <result column="parent_id" jdbcType="VARCHAR" property="parentId" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="level" jdbcType="INTEGER" property="level" />
        <result column="component" jdbcType="VARCHAR" property="component" />
        <result column="is_platform" jdbcType="INTEGER" property="isPlatform" />
        <result column="sequence" jdbcType="INTEGER" property="sequence" />
    </resultMap>

    <resultMap id="getList" type="com.iris.model.vo.system.SitemapsVO" extends="SitemapsBaseInfo">
        <result column="icon" jdbcType="VARCHAR" property="icon"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <collection property="children" column="{parentId=id}" ofType="com.iris.model.vo.system.SitemapsChildrenVO" select="getList">
        </collection>
    </resultMap>

    <resultMap id="getSiteMapRelevanceByType" type="com.iris.model.vo.system.SitemapsAuthListVO">
        <id property="id" column="id"/>
        <result property="parentId" column="parentId"/>
        <result property="name" column="name"/>
        <result property="title" column="title"/>
        <result property="level" column="level"/>
        <result property="component" column="component"/>
        <result property="isPlatform" column="is_platform"/>
        <result property="sequence" column="sequence"/>
        <result property="isAuth" column="ss_isAuth"/>
        <collection property="children" resultMap="children"/>
    </resultMap>

    <resultMap id="children" type="com.iris.model.vo.system.SitemapsAuthListVO$Children">
        <id property="id" column="ss2_id"/>
        <result property="parentId" column="ss2_parentId"/>
        <result property="name" column="ss2_name"/>
        <result property="title" column="ss2_title"/>
        <result property="level" column="ss2_level"/>
        <result property="component" column="ss2_commponent"/>
        <result property="isPlatform" column="ss2_isPlatform"/>
        <result property="sequence" column="ss2_sequence"/>
        <result property="isAuth" column="ss2_isAuth"/>
        <collection property="actions" ofType="com.iris.model.vo.system.SitemapsAuthListVO$Children$ActionVO">
            <id property="id" column="sa_id"/>
            <result property="sitemapId" column="sitemap_id"/>
            <result property="name" column="sa_name"/>
            <result property="title" column="sa_title"/>
            <result property="description" column="description"/>
            <result property="key" column="key"/>
            <result property="area" column="area"/>
            <result property="sequence" column="sa_sequence"/>
            <result property="isAuth" column="sa_isAuth"/>
        </collection>
    </resultMap>

    <select id="getAuthList" resultMap="getAuthList">

        select ss_p.id, ss_p.parent_id, ss_p.is_platform, ss_p.name, ss_p.level, ss_p.component, ss_p.sequence, ss_c.icon, ss_c.title, 1 `show`
        from sys_sitemaps ss_p
        left join sys_sitemaps ss_c on ss_c.id = ss_p.id and ss_c.is_deleted = 0
        where ss_p.is_deleted = 0
        <if test="isPlatform != null">
            and ss_c.is_platform = #{isPlatform}
        </if>
        order by ss_p.sequence

    </select>

    <select id="getList" resultMap="getList">

        select ss_p.id, ss_p.parent_id, ss_p.name, ss_p.level, ss_p.component, ss_p.sequence, ss_p.icon, ss_p.title, ss_p.is_platform
        from sys_sitemaps ss_p
        where ss_p.is_deleted = 0

        <choose>
            <when test="parentId != null and parentId != ''">
                and ss_p.parent_id = #{parentId,jdbcType=VARCHAR}
            </when>
            <otherwise>
                and ss_p.parent_id is null
            </otherwise>
        </choose>
        <if test="isPlatform != null">
            and ss_p.is_platform = #{isPlatform}
        </if>

        order by ss_p.sequence
    </select>

    <select id="getAuthSiteMapByTargetId" resultMap="getAuthList">

        select ss.id, ss.parent_id, (case when #{orgClass} in ('1005-20', '1005-40') and ss.title = '机构管理' and ss.level != 1 then '部门管理' else ss.title end) title,
                ss.is_platform, ss.name, ss.level, ss.component, ss.sequence, ss.icon, ss.is_deleted, ss.sequence, 1 `show`
        from sitemap_action_authority saa
            join sys_sitemaps ss on ss.id = saa.sitemap_action_id and ss.is_deleted = 0
        where saa.is_deleted = 0 and saa.authority_type = 'sitemap'
            and saa.is_authorised = 1
            and ss.id = saa.sitemap_action_id
        <if test="targetIds != null and targetIds.size() > 0">
            and saa.target_id in
            <foreach collection="targetIds" item="id" open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>

<!--        过滤 -->
        <if test="orgFiltration != null and orgFiltration.size() > 0">
            and ss.id not in
            <foreach collection="orgFiltration" item="id" open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>
        <if test="isPlatform != null">
            and ss.is_platform = #{isPlatform}
        </if>
        order by ss.sequence
    </select>

    <select id="getSiteMapRelevanceByType" resultMap="getSiteMapRelevanceByType">

        select ss.id, ss.parent_id,ss.is_platform, ss.name,
                (case when #{listDTO.orgClass} in ('1005-20', '1005-40') and ss.title = '机构管理' and ss.level != 1 then '部门管理' else ss.title end) title,
                ss.level, ss.component, ss.sequence,
                (case when saa2.sitemap_action_id is null then 0 else 1 end ) ss_isAuth,
                ss2.id ss2_id, ss2.parent_id ss2_parentId, ss2.name ss2_name, ss2.is_platform ss2_isPlatform,
                ss2.title ss2_title, ss2.level ss2_level, ss2.component ss2_commponent, ss2.sequence ss2_sequence,
                (case when saa.sitemap_action_id is null then null else 1 end ) ss2_isAuth,
                sa.id sa_id, sa.sitemap_id, sa.name sa_name, sa.title sa_titile, sa.description, sa.key, sa.area, sa.sequence sa_sequence,
                (case when saa3.sitemap_action_id is null then null else 1 end ) sa_isAuth

        from sys_sitemaps ss
            left join sys_sitemaps ss2 on ss2.is_deleted = 0
                                        and ss2.parent_id = ss.id
                                        and ss2.is_platform = #{listDTO.isPlatform}

            left join sitemap_action_authority saa on saa.sitemap_action_id = ss2.id
                                                    and saa.target_id = #{listDTO.targetId}
                                                    and saa.authority_target_type = #{listDTO.type}
                                                    and saa.authority_type = 'sitemap'

            left join sitemap_action_authority saa2 on saa2.sitemap_action_id = ss.id
                                                    and saa2.target_id = #{listDTO.targetId}
                                                    and saa2.authority_target_type = #{listDTO.type}
                                                    and saa2.authority_type = 'sitemap'

            left join sys_action sa on sa.is_deleted = 0 and sa.sitemap_id = ss2.id
                                                    <if test="listDTO.filterActionKeys != null and listDTO.filterActionKeys.size() > 0 ">
                                                        and sa.`key` not in
                                                        <foreach collection="listDTO.filterActionKeys" item="actionKey" open="(" separator="," close=")">
                                                            #{actionKey}
                                                        </foreach>
                                                    </if>
            left join sitemap_action_authority saa3 on saa3.sitemap_action_id = sa.id
                                                    and saa3.target_id = #{listDTO.targetId}
                                                    and saa3.authority_target_type = #{listDTO.type}
                                                    and saa3.authority_type = 'action'

            where ss.parent_id is null and ss.is_deleted = 0
            <if test="listDTO.isPlatform != null">
                and ss.is_platform = #{listDTO.isPlatform}
            </if>

            <if test="listDTO.orgFiltration != null and listDTO.orgFiltration.size() > 0">
                and ss.id not in
                <foreach collection="listDTO.orgFiltration" item="id" open="(" separator="," close=")">
                    #{id}
                </foreach>
                and ss2.id not in
                <foreach collection="listDTO.orgFiltration" item="id" open="(" separator="," close=")">
                    #{id}
                </foreach>
            </if>

            order by ss.level, ss.sequence
    </select>

    <select id="getAuthActionByTargetIds" resultType="com.iris.model.vo.system.SysActionVO">

        select sa.id, sa.sitemap_id, sa.name, sa.title, sa.description, sa.key
        from sys_action sa
                join sitemap_action_authority saa on saa.is_deleted = 0 and saa.is_authorised = 1 and saa.authority_type = 'action'
        <if test="targetIds != null and targetIds.size() > 0">
            and saa.target_id in
            <foreach collection="targetIds" item="id" open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>
        where saa.sitemap_action_id = sa.id and sa.sitemap_id = #{sitemapId}  and sa.is_deleted = 0
        group by sa.id
        order by sa.sequence
    </select>

    <update id="updateSitemapsById">

        update sys_sitemaps
        set parent_id = #{sysSitemaps.parentId},
            name = #{sysSitemaps.name},
            title = #{sysSitemaps.title},
            level = #{sysSitemaps.level},
            url = #{sysSitemaps.url},
            sequence = #{sysSitemaps.sequence},
            icon = #{sysSitemaps.icon},
            component = #{sysSitemaps.component}
        where id = #{sysSitemaps.id}
    </update>

    <select id="getFiltrationId" resultType="java.lang.String">

        select ss.id, ss.title, saa.id
            from sitemap_action_authority saa
            join sys_roles sr on sr.name = #{routeName,jdbcType=VARCHAR} and sr.is_default = 1 and saa.target_id = sr.id and saa.authority_type = 'sitemap' and saa.is_authorised = 1
            join sys_sitemaps ss on ss.id = saa.sitemap_action_id and ss.is_deleted = 0 and ss.is_platform = 0
        where saa.is_deleted = 0
    </select>
</mapper>
